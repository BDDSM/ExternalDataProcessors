
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИнициализироватьТабличныйДокумент();
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ПеренестиВДокумент",
		"Доступность",
		НайденныеТовары.Количество() > 0);
	
КонецПроцедуры



#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НайденныеТоварыПриИзменении(Элемент)
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ПеренестиВДокумент",
		"Доступность",
		НайденныеТовары.Количество() > 0);
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПрочитатьДанные(Команда)
	
	Если НайденныеТовары.Количество() Тогда
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеОтветаПрочитатьДанные", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, "В найденных товарах есть строки, при прочтении они будут удалены. Продолжить?",РежимДиалогаВопрос.ДаНет, 60);
		
	КонецЕсли;
	
	ПрочитатьДанныеНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеОтветаПрочитатьДанные(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ПрочитатьДанныеНаСервере();		
	КонецЕсли; 
	
КонецПроцедуры 

&НаСервере
Процедура ПрочитатьДанныеНаСервере()
	
	НачальныйИндекс = 2;
	КонечныйИндекс = ТабличныйДокумент.ВысотаТаблицы;
	ТаблицаДляПереносаДанных = ПолучитьИзВременногоХранилища(АдресВременногоХранилища);
	ТаблицаДляПереносаДанных.Очистить();
	НайденныеТовары.Очистить();
	
	Для Индекс = НачальныйИндекс По КонечныйИндекс Цикл
		
		НоваяСтрока = ТаблицаДляПереносаДанных.Добавить();      
		
		Для каждого ТекОбласть Из ТабличныйДокумент.Области Цикл			
			ИмяКолонки = ТекОбласть.Имя;
			Ячейка		= СтрШаблон("R%1C%2",Формат(Индекс, "ЧН=0; ЧГ=0"),Формат(ТекОбласть.Лево, "ЧН=0; ЧГ=0"));
			Текст 		= СтрЗаменить(СокрЛП(ТабличныйДокумент.Область(Ячейка).Текст),Символы.НПП,"");
			НоваяСтрока[ИмяКолонки] = Текст;			
		КонецЦикла; 	
	
	КонецЦикла; 
	
	СопоставитьДанныеИЗаполнитьНайденныеСтроки(ТаблицаДляПереносаДанных);	
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ПеренестиВДокумент",
		"Доступность",
		НайденныеТовары.Количество() > 0);	
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиВДокумент(Команда)
	
	ПеренестиВДокументНаСервере();
	
	Для каждого ОбъектНазначения Из Параметры.ОбъектыНазначения  Цикл
		Оповестить("ВыполненаЗаписьДокумента", Новый Структура("ДокументСсылка",ОбъектНазначения));	
	КонецЦикла; 
	
	Закрыть();
	
КонецПроцедуры

&НаСервере
Процедура ПеренестиВДокументНаСервере()
	
	Для каждого ОбъектНазначения Из Параметры.ОбъектыНазначения Цикл
		
		ДокументОбъект = ОбъектНазначения.ПолучитьОбъект();		
		ДокументОбъект.Товары.Очистить();                  	
		
		ДанныеОбъекта = Новый Структура(
			"Дата, ВидОперации, Организация, Склад,
			|ТипЦен, ВалютаДокумента, КурсДокумента, КратностьДокумента,
			|СуммаВключаетНДС, 
			|ТипСкладаНТТ,УчетПоПродажнойСтоимости,ЕстьАкцизныйНалог, СуммаВключаетАкциз");		
		ЗаполнитьЗначенияСвойств(ДанныеОбъекта, ДокументОбъект);
		ДанныеОбъекта.ТипСкладаНТТ = НЕ ДокументОбъект.Склад.Пустая() И ДокументОбъект.Склад.ТипСклада = Перечисления.ТипыСкладов.НеавтоматизированнаяТорговаяТочка;
		СпособОценкиТоваровВРознице    = УчетнаяПолитика.СпособОценкиТоваровВРознице(ДокументОбъект.Организация, ДокументОбъект.Дата);
		ДанныеОбъекта.УчетПоПродажнойСтоимости = (СпособОценкиТоваровВРознице = 
			Перечисления.СпособыОценкиТоваровВРознице.ПоПродажнойСтоимости);
			
		ПлательщикНДС = УчетнаяПолитика.ПлательщикНДС(ДанныеОбъекта.Организация, ДанныеОбъекта.Дата);
		ДанныеОбъекта.ЕстьАкцизныйНалог = (ДанныеОбъекта.Дата >= '2015 01 01');
		ДанныеОбъекта.СуммаВключаетАкциз= (НЕ ПлательщикНДС) ИЛИ (ПлательщикНДС И ДанныеОбъекта.СуммаВключаетНДС);
		
		Для каждого НайденныйТовар Из НайденныеТовары Цикл
			
			СтрокаТабличнойЧасти = ДокументОбъект.Товары.Добавить();
			СтрокаТабличнойЧасти.Номенклатура     = НайденныйТовар.Номенклатура;
			СтрокаТабличнойЧасти.Количество       = НайденныйТовар.Количество;
			
			СведенияОНоменклатуре = БухгалтерскийУчетПереопределяемый.ПолучитьСведенияОНоменклатуре(
					СтрокаТабличнойЧасти.Номенклатура, ДанныеОбъекта);
			
			Если СведенияОНоменклатуре = Неопределено Тогда
				Возврат;
			КонецЕсли; 			           		
			
			СтрокаТабличнойЧасти.ЕдиницаИзмерения		= СведенияОНоменклатуре.БазоваяЕдиницаИзмерения;
			СтрокаТабличнойЧасти.Коэффициент            = СведенияОНоменклатуре.Коэффициент;			
					
			Документы.ОтчетОРозничныхПродажах.ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(ДанныеОбъекта, СтрокаТабличнойЧасти, СведенияОНоменклатуре, Истина, Истина);
		
			СтрокаТабличнойЧасти.Цена					= НайденныйТовар.Цена;
			СтрокаТабличнойЧасти.СтавкаНДС				= СведенияОНоменклатуре.СтавкаНДС;

			ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуТабЧасти(СтрокаТабличнойЧасти);
			ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуНДСТабЧасти(СтрокаТабличнойЧасти, ДанныеОбъекта.СуммаВключаетНДС);
						
			Если (ДанныеОбъекта.Дата >= '2015 01 01') Тогда
				ОбработкаТабличныхЧастейКлиентСервер.ЗаполнитьСтатьюДекларацииПоАкцизномуНалогуТабЧасти(СтрокаТабличнойЧасти);
			КонецЕсли;
			
			ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуНДСиАкцизногоНалогаТабЧасти(СтрокаТабличнойЧасти, ДанныеОбъекта.СуммаВключаетНДС, ДанныеОбъекта.ЕстьАкцизныйНалог, ДанныеОбъекта.СуммаВключаетАкциз);
		   		
		КонецЦикла; 		
		
		ДокументОбъект.Записать(РежимЗаписиДокумента.Запись); 
		
	КонецЦикла; 
	
	
КонецПроцедуры


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ИнициализироватьТабличныйДокумент()
	
	МакетЗагрузкиДанных  = РеквизитФормыВЗначение("Объект").ПолучитьМакет("МакетЗагрузкиДанных");	
	ТабличныйДокумент.Очистить();
	
	ТаблицаДляПереносаДанных = Новый ТаблицаЗначений;
	Колонки = ТаблицаДляПереносаДанных.Колонки;
	
	//NOTE: связь тз и табдок
	ТипСтрока25 	= ОбщегоНазначения.ОписаниеТипаСтрока(25);
	ТипЧисло15_3 	= ОбщегоНазначения.ОписаниеТипаЧисло(15,3,ДопустимыйЗнак.Неотрицательный);
	ТипЧисло15_2 	= ОбщегоНазначения.ОписаниеТипаЧисло(15,2,ДопустимыйЗнак.Неотрицательный);
	
	ОбластьАртикул 	= МакетЗагрузкиДанных.ПолучитьОбласть("Артикул");
	ТабличныйДокумент.Присоединить(ОбластьАртикул);
	
	Колонки.Добавить("Артикул",	ТипСтрока25);
	ОбластьКоличество = МакетЗагрузкиДанных.ПолучитьОбласть("Количество");
	Колонки.Добавить("Количество",	ТипЧисло15_3);
	ТабличныйДокумент.Присоединить(ОбластьКоличество);
	ОбластьЦена = МакетЗагрузкиДанных.ПолучитьОбласть("Цена");
	Колонки.Добавить("Цена",		ТипЧисло15_2); 
	ТабличныйДокумент.Присоединить(ОбластьЦена);
	
	ТабличныйДокумент.ФиксацияСверху = 1;
	
	АдресВременногоХранилища = ПоместитьВоВременноеХранилище(ТаблицаДляПереносаДанных, УникальныйИдентификатор);
	
КонецПроцедуры

&НаСервере
Процедура СопоставитьДанныеИЗаполнитьНайденныеСтроки(ТаблицаДляПереноса)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаДляПереноса", ТаблицаДляПереноса);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДляПереноса.Артикул КАК Артикул,
	|	ТаблицаДляПереноса.Количество КАК Количество,
	|	ТаблицаДляПереноса.Цена КАК Цена
	|ПОМЕСТИТЬ ВтТаблицаДляПереноса
	|ИЗ
	|	&ТаблицаДляПереноса КАК ТаблицаДляПереноса
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтТаблицаДляПереноса.Артикул КАК Артикул,
	|	ВтТаблицаДляПереноса.Количество КАК Количество,
	|	ВтТаблицаДляПереноса.Цена КАК Цена,
	|	Номенклатура.Ссылка КАК Номенклатура,
	|	Номенклатура.Ссылка ЕСТЬ NULL КАК НеНайдено,
	|	Номенклатура.СтавкаНДС КАК СтавкаНДС
	|ИЗ
	|	ВтТаблицаДляПереноса КАК ВтТаблицаДляПереноса
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	|		ПО ВтТаблицаДляПереноса.Артикул = Номенклатура.Артикул
	|			И (НЕ Номенклатура.ПометкаУдаления)";
	
	Выборка = запрос.Выполнить().Выбрать();
	
	ПропущенныеАртикула = Новый Массив;
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.НеНайдено Тогда
		
			ПропущенныеАртикула.Добавить(Выборка.Артикул);
			
		Иначе
			
			НоваяСтрока = НайденныеТовары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);			
			
		КонецЕсли;		
		
	КонецЦикла;
	
	ВыделитьПропущенныеАртикула(ПропущенныеАртикула);
	
КонецПроцедуры

&НаСервере
Процедура ВыделитьПропущенныеАртикула(ПропущенныеАртикула)
	
	НачальныйИндекс = 2;
	КонечныйИндекс = ТабличныйДокумент.ВысотаТаблицы;
	
	Для Индекс = НачальныйИндекс По КонечныйИндекс Цикл
		
		Ячейка	= СтрШаблон("R%1C1",Формат(Индекс, "ЧН=0; ЧГ=0"));		
		ОбластьЯчеек = ТабличныйДокумент.Область(Ячейка);
		Текст = СтрЗаменить(СокрЛП(ОбластьЯчеек.Текст),Символы.НПП,"");
		
		Если Не ПропущенныеАртикула.Найти(Текст) = Неопределено Тогда
			
			ОбластьЯчеек.Примечание.Текст = "По указанному артикулу не удалось сопоставить номенеклатуру";

		КонецЕсли;	
			
	КонецЦикла; 
	
	
КонецПроцедуры



#КонецОбласти